
macro(DECLARE_OUTPUT_DIRECTORIES)

	set(BIN_INSTALLATION_PATH ${CMAKE_CURRENT_SOURCE_DIR}/bin CACHE PATH "path to install binaries" FORCE)
	set(LIB_INSTALLATION_PATH ${CMAKE_CURRENT_SOURCE_DIR}/lib CACHE PATH "path to install libraries" FORCE)
	set(INCLUDE_INSTALLATION_PATH ${CMAKE_CURRENT_SOURCE_DIR}/include CACHE PATH "path to install headers" FORCE)

	include_directories(${INCLUDE_INSTALLATION_PATH})
        link_directories(${LIB_INSTALLATION_PATH} ${BIN_INSTALLATION_PATH})

endmacro(DECLARE_OUTPUT_DIRECTORIES)


macro(SET_OUTPUT_DIRECTORIES target)

	if(WIN32)
		set_target_properties(${target} PROPERTIES
			ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${LIB_INSTALLATION_PATH}
			ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${LIB_INSTALLATION_PATH}
			LIBRARY_OUTPUT_DIRECTORY_DEBUG ${LIB_INSTALLATION_PATH}
			LIBRARY_OUTPUT_DIRECTORY_RELEASE ${LIB_INSTALLATION_PATH}
			RUNTIME_OUTPUT_DIRECTORY_DEBUG ${BIN_INSTALLATION_PATH}
			RUNTIME_OUTPUT_DIRECTORY_RELEASE ${BIN_INSTALLATION_PATH}
		)
	else(WIN32)
		set_target_properties(${target} PROPERTIES
			ARCHIVE_OUTPUT_DIRECTORY ${LIB_INSTALLATION_PATH}
                        LIBRARY_OUTPUT_DIRECTORY ${BIN_INSTALLATION_PATH}
			RUNTIME_OUTPUT_DIRECTORY ${BIN_INSTALLATION_PATH}
		)
	endif(WIN32)

endmacro(SET_OUTPUT_DIRECTORIES)


macro(ADD_SUBPROJECT subproject path)

	string(TOUPPER ${subproject} subproject_upper)
	set(${subproject_upper}_SUBPROJECT ON)
	add_definitions(-D${subproject_upper}_SUBPROJECT)
	add_subdirectory(${path})

endmacro(ADD_SUBPROJECT)
