DROP SEQUENCE t_seq;
DROP TABLE t_migration;
DROP TABLE t_migration_order;

CREATE GLOBAL TEMPORARY
TABLE t_migration  
ON COMMIT PRESERVE ROWS   
AS SELECT * FROM ZONE_BOUNDARY
WHERE 1=0;

CREATE GLOBAL TEMPORARY
TABLE t_migration_order  
ON COMMIT PRESERVE ROWS   
AS SELECT * FROM ZONE_BOUNDARY
WHERE 1=0;

CREATE SEQUENCE t_seq MINVALUE 0 MAXVALUE 999999999999999999999999 INCREMENT BY 10 START WITH 1030 CACHE 20 NOORDER NOCYCLE ;


DELETE FROM zone_boundary
WHERE SN BETWEEN 1030 AND 2850
AND zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDD' AND TYPE = 1);


INSERT INTO t_migration (ID, TYPE, SN, LATITUDE, LONGITUDE, ZONE_ID, ARC_LATITUDE, ARC_LONGITUDE, ARC_DISTANCE)
SELECT ID, TYPE, SN, LATITUDE, LONGITUDE, ZONE_ID, ARC_LATITUDE, ARC_LONGITUDE, ARC_DISTANCE 
FROM ZONE_BOUNDARY
WHERE zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDL')
AND SN BETWEEN 10 AND 1760;


INSERT INTO t_migration_order (ID, TYPE, SN, LATITUDE, LONGITUDE, ZONE_ID, ARC_LATITUDE, ARC_LONGITUDE, ARC_DISTANCE)
SELECT ID, TYPE, t_seq.NEXTVAL, LATITUDE, LONGITUDE, ZONE_ID, ARC_LATITUDE, ARC_LONGITUDE, ARC_DISTANCE
FROM (
SELECT ID, TYPE, SN, LATITUDE, LONGITUDE, ZONE_ID, ARC_LATITUDE, ARC_LONGITUDE, ARC_DISTANCE 
FROM t_migration
ORDER BY SN
);

SELECT * FROM t_migration_order;

SELECT COUNT(*) FROM zone_boundary
WHERE SN BETWEEN 1030 AND 2850
AND zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDD' AND TYPE = 1);


INSERT INTO zone_boundary (TYPE, SN, LATITUDE, LONGITUDE, ZONE_ID, ARC_LATITUDE, ARC_LONGITUDE, ARC_DISTANCE)
SELECT TYPE, SN, LATITUDE, LONGITUDE, (SELECT id FROM ZONE WHERE id_name = 'UTDD' AND TYPE = 1), ARC_LATITUDE, ARC_LONGITUDE, ARC_DISTANCE FROM t_migration_order;

DROP SEQUENCE t_seq;
DROP TABLE t_migration;
DROP TABLE t_migration_order;

UPDATE zone
SET type = 2, parent_id = (SELECT id FROM ZONE WHERE id_name = 'UTDD' AND TYPE = 1)
WHERE id = (SELECT id FROM ZONE WHERE id_name = 'UTDL');

UPDATE holding
SET zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDD' AND TYPE = 1)
WHERE zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDL');

UPDATE meteo
SET zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDD' AND TYPE = 1)
WHERE zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDL');

UPDATE restriction
SET zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDD' AND TYPE = 1)
WHERE zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDL');

UPDATE restriction_user
SET zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDD' AND TYPE = 1)
WHERE zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDL');

UPDATE route
SET zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDD' AND TYPE = 1)
WHERE zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDL');

UPDATE zone_airport
SET zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDD' AND TYPE = 1)
WHERE zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDL');

UPDATE zone_point
SET zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDD' AND TYPE = 1)
WHERE zone_id = (SELECT id FROM ZONE WHERE id_name = 'UTDL');


-----------------------------------

SELECT point_id, COUNT(point_id)
FROM zone_point
GROUP BY point_id
HAVING COUNT(point_id) > 1;


SELECT name, zone_id
FROM route
GROUP BY name, zone_id
HAVING COUNT(name) > 1;
