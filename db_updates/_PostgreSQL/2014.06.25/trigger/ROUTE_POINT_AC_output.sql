-- Generated by Ora2Pg, the Oracle database Schema converter, version 13.0
-- Copyright 2000-2014 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=192.20.1.81;sid=XE

SET client_encoding TO 'UTF8';

SET search_path = aero, pg_catalog;\set ON_ERROR_STOP ON

DROP TRIGGER IF EXISTS route_point_ac ON route_point CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_route_point_ac () RETURNS trigger AS $BODY$
DECLARE
	ac_flag numeric;

	cursorfir zone_pkg.zone_rec_type;
	curfir cursorfir%ROWTYPE;

	cursorroute zone_pkg.route_rec_type;
	curroute cursorroute%ROWTYPE;

	cursorpoint zone_pkg.point_rec_type;
	newpoint cursorpoint%ROWTYPE;
	oldpoint cursorpoint%ROWTYPE;

BEGIN
	ac_flag := sys_context('CLIENTCONTEXT', 'ARINC_CHANGES_FLAG');
	IF ac_flag = 777 THEN
		--DELETE
		IF TG_OP = 'DELETE' THEN
			zone_pkg.get_cur_point(OLD.point_id, cursorpoint);
			FETCH cursorpoint INTO oldpoint;
			CLOSE cursorpoint;
			zone_pkg.get_cur_route(OLD.route_id, cursorroute);
			FETCH cursorroute INTO curroute;
			CLOSE cursorroute;
			zone_pkg.get_cur_zone(curroute.zone_id, cursorfir);
			FETCH cursorfir INTO curfir;
			CLOSE cursorfir;
			INSERT INTO ARINC_CHANGES(STATEMENT)
			VALUES
			('DELETE FROM ROUTE_POINT WHERE ' ||
				'SN = ''' || OLD.SN || ''' AND ' ||
				'POINT_ID = (SELECT ID FROM POINT WHERE TYPE = ''' || oldpoint.TYPE || ''' AND NAME = ''' || oldpoint.NAME || ''' AND LATITUDE = ''' || oldpoint.LATITUDE || ''' AND LONGITUDE = ''' || oldpoint.LONGITUDE || ''') AND ' ||
				'ROUTE_ID = (SELECT ID FROM ROUTE WHERE NAME = ''' || curroute.NAME || ''' AND ZONE_ID = (SELECT ID FROM ZONE WHERE ID_NAME = ''' || curfir.ID_NAME || ''' AND TYPE = ''' || curfir.TYPE || ''' AND NAME = ''' || curfir.NAME || ''')) AND ' ||
				'END_FLAG = ''' || OLD.END_FLAG || '''');
		ELSE
			zone_pkg.get_cur_point(NEW.point_id, cursorpoint);
			FETCH cursorpoint INTO newpoint;
			CLOSE cursorpoint;
			zone_pkg.get_cur_route(NEW.route_id, cursorroute);
			FETCH cursorroute INTO curroute;
			CLOSE cursorroute;
			zone_pkg.get_cur_zone(curroute.zone_id, cursorfir);
			FETCH cursorfir INTO curfir;
			CLOSE cursorfir;
			--INSERT
			IF TG_OP = 'INSERT' THEN
				INSERT INTO ARINC_CHANGES(STATEMENT)
				VALUES
				('INSERT INTO ROUTE_POINT(SN, POINT_ID, ROUTE_ID, END_FLAG) ' ||
				'VALUES(' ||
					'''' || NEW.SN || ''', ' ||
					'(SELECT ID FROM POINT WHERE TYPE = ''' || newpoint.TYPE || ''' AND NAME = ''' || newpoint.NAME || ''' AND LATITUDE = ''' || newpoint.LATITUDE || ''' AND LONGITUDE = ''' || newpoint.LONGITUDE || '''), ' ||
					'(SELECT ID FROM ROUTE WHERE NAME = ''' || curroute.NAME || ''' AND ZONE_ID = (SELECT ID FROM ZONE WHERE ID_NAME = ''' || curfir.ID_NAME || ''' AND TYPE = ''' || curfir.TYPE || ''' AND NAME = ''' || curfir.NAME || ''')), ' ||
					'''' || NEW.END_FLAG || '''' ||
					')');
			--UPDATE
			ELSE
				zone_pkg.get_cur_point(OLD.point_id, cursorpoint);
				FETCH cursorpoint INTO oldpoint;
				CLOSE cursorpoint;
				INSERT INTO ARINC_CHANGES(STATEMENT)
				VALUES
				('UPDATE ROUTE_POINT SET ' ||
					'SN = ''' || NEW.SN || ''', ' ||
					'POINT_ID = (SELECT ID FROM POINT WHERE TYPE = ''' || newpoint.TYPE || ''' AND NAME = ''' || newpoint.NAME || ''' AND LATITUDE = ''' || newpoint.LATITUDE || ''' AND LONGITUDE = ''' || newpoint.LONGITUDE || '''), ' ||
					--'ROUTE_ID = (SELECT ID FROM ROUTE WHERE NAME = ''' || curroute.NAME || ''' AND ZONE_ID = (SELECT ID FROM ZONE WHERE ID_NAME = ''' || curfir.ID_NAME || ''' AND TYPE = ''' || curfir.TYPE || ''' AND NAME = ''' || curfir.NAME || ''')), ' ||
					'END_FLAG = ''' || NEW.END_FLAG || ''' ' ||
				'WHERE ' ||
					'SN = ''' || OLD.SN || ''' AND ' ||
					'POINT_ID = (SELECT ID FROM POINT WHERE TYPE = ''' || oldpoint.TYPE || ''' AND NAME = ''' || oldpoint.NAME || ''' AND LATITUDE = ''' || oldpoint.LATITUDE || ''' AND LONGITUDE = ''' || oldpoint.LONGITUDE || ''') AND ' ||
					'ROUTE_ID = (SELECT ID FROM ROUTE WHERE NAME = ''' || curroute.NAME || ''' AND ZONE_ID = (SELECT ID FROM ZONE WHERE ID_NAME = ''' || curfir.ID_NAME || ''' AND TYPE = ''' || curfir.TYPE || ''' AND NAME = ''' || curfir.NAME || ''')) AND ' ||
					'END_FLAG = ''' || OLD.END_FLAG || '''');
			END IF;
		END IF;
	END IF;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql';

CREATE TRIGGER route_point_ac
	AFTER INSERT OR UPDATE OR DELETE ON route_point FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_route_point_ac();

