-- Generated by Ora2Pg, the Oracle database Schema converter, version 13.0
-- Copyright 2000-2014 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=192.20.1.81;sid=XE

SET client_encoding TO 'UTF8';

SET search_path = aero, pg_catalog;\set ON_ERROR_STOP ON

DROP TRIGGER IF EXISTS zone_boundary_ac ON zone_boundary CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_zone_boundary_ac () RETURNS trigger AS $BODY$
DECLARE
	ac_flag numeric;

	cursorfir zone_pkg.zone_rec_type;
	curfir cursorfir%ROWTYPE;

BEGIN
	ac_flag := sys_context('CLIENTCONTEXT', 'ARINC_CHANGES_FLAG');
	IF ac_flag = 777 THEN
		--DELETE
		IF TG_OP = 'DELETE' THEN
			zone_pkg.get_cur_zone(OLD.zone_id, cursorfir);
			FETCH cursorfir INTO curfir;
			CLOSE cursorfir;
			INSERT INTO ARINC_CHANGES(STATEMENT)
			VALUES
			('DELETE FROM ZONE_BOUNDARY WHERE ' ||
				'TYPE = ''' || OLD.TYPE || ''' AND ' ||
				'SN = ''' || OLD.SN || ''' AND ' ||
				'LATITUDE = ''' || OLD.LATITUDE || ''' AND ' ||
				'LONGITUDE = ''' || OLD.LONGITUDE || ''' AND ' ||
				'ZONE_ID = (SELECT ID FROM ZONE WHERE ID_NAME = ''' || curfir.ID_NAME || ''' AND TYPE = ''' || curfir.TYPE || ''' AND NAME = ''' || curfir.NAME || ''') AND ' ||
				'ARC_LATITUDE = ''' || OLD.ARC_LATITUDE || ''' AND ' ||
				'ARC_LONGITUDE = ''' || OLD.ARC_LONGITUDE || ''' AND ' ||
				'ARC_DISTANCE = ''' || OLD.ARC_DISTANCE || '''');
		ELSE
			zone_pkg.get_cur_zone(NEW.zone_id, cursorfir);
			FETCH cursorfir INTO curfir;
			CLOSE cursorfir;
			--INSERT
			IF TG_OP = 'INSERT' THEN
				INSERT INTO ARINC_CHANGES(STATEMENT)
				VALUES
				('INSERT INTO ZONE_BOUNDARY(TYPE, SN, LATITUDE, LONGITUDE, ZONE_ID, ARC_LATITUDE, ARC_LONGITUDE, ARC_DISTANCE) ' ||
				'VALUES(' ||
					'''' || NEW.TYPE || ''', ' ||
					'''' || NEW.SN || ''', ' ||
					'''' || NEW.LATITUDE || ''', ' ||
					'''' || NEW.LONGITUDE || ''', ' ||
					'(SELECT ID FROM ZONE WHERE ID_NAME = ''' || curfir.ID_NAME || ''' AND TYPE = ''' || curfir.TYPE || ''' AND NAME = ''' || curfir.NAME || '''), ' ||
					'''' || NEW.ARC_LATITUDE || ''', ' ||
					'''' || NEW.ARC_LONGITUDE || ''', ' ||
					'''' || NEW.ARC_DISTANCE || '''' ||
					')');
			--UPDATE
			ELSE
				INSERT INTO ARINC_CHANGES(STATEMENT)
				VALUES
				('UPDATE ZONE_BOUNDARY SET ' ||
					'TYPE = ''' || NEW.TYPE || ''', ' ||
					'SN = ''' || NEW.SN || ''', ' ||
					'LATITUDE = ''' || NEW.LATITUDE || ''', ' ||
					'LONGITUDE = ''' || NEW.LONGITUDE || ''', ' ||
					'ARC_LATITUDE = ''' || NEW.ARC_LATITUDE || ''', ' ||
					'ARC_LONGITUDE = ''' || NEW.ARC_LONGITUDE || ''', ' ||
					'ARC_DISTANCE = ''' || NEW.ARC_DISTANCE || ''' ' ||
				'WHERE ' ||
					'TYPE = ''' || OLD.TYPE || ''' AND ' ||
					'SN = ''' || OLD.SN || ''' AND ' ||
					'LATITUDE = ''' || OLD.LATITUDE || ''' AND ' ||
					'LONGITUDE = ''' || OLD.LONGITUDE || ''' AND ' ||
					'ZONE_ID = (SELECT ID FROM ZONE WHERE ID_NAME = ''' || curfir.ID_NAME || ''' AND TYPE = ''' || curfir.TYPE || ''' AND NAME = ''' || curfir.NAME || ''') AND ' ||
					'ARC_LATITUDE = ''' || OLD.ARC_LATITUDE || ''' AND ' ||
					'ARC_LONGITUDE = ''' || OLD.ARC_LONGITUDE || ''' AND ' ||
					'ARC_DISTANCE = ''' || OLD.ARC_DISTANCE || '''');
			END IF;
		END IF;
	END IF;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql';

CREATE TRIGGER zone_boundary_ac
	AFTER INSERT OR UPDATE OR DELETE ON zone_boundary FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_zone_boundary_ac();

