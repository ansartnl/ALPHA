-- Generated by Ora2Pg, the Oracle database Schema converter, version 13.0
-- Copyright 2000-2014 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=192.20.1.81;sid=XE

SET client_encoding TO 'UTF8';

SET search_path = aero, pg_catalog;\set ON_ERROR_STOP ON

DROP TRIGGER IF EXISTS holding_ac ON holding CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_holding_ac () RETURNS trigger AS $BODY$
DECLARE
	ac_flag numeric;

	cursorfir zone_pkg.zone_rec_type;
	curfir cursorfir%ROWTYPE;

	cursorpoint zone_pkg.point_rec_type;
	newpoint cursorpoint%ROWTYPE;
	oldpoint cursorpoint%ROWTYPE;

BEGIN
	ac_flag := sys_context('CLIENTCONTEXT', 'ARINC_CHANGES_FLAG');
	IF ac_flag = 777 THEN
		--DELETE
		IF TG_OP = 'DELETE' THEN
			zone_pkg.get_cur_zone(OLD.zone_id, cursorfir);
			FETCH cursorfir INTO curfir;
			CLOSE cursorfir;
			zone_pkg.get_cur_point(OLD.point_id, cursorpoint);
			FETCH cursorpoint INTO oldpoint;
			CLOSE cursorpoint;
			INSERT INTO ARINC_CHANGES(STATEMENT)
			VALUES
			('DELETE FROM HOLDING WHERE ' ||
				'POINT_ID = (SELECT ID FROM POINT WHERE TYPE = ''' || oldpoint.TYPE || ''' AND NAME = ''' || oldpoint.NAME || ''' AND LATITUDE = ''' || oldpoint.LATITUDE || ''' AND LONGITUDE = ''' || oldpoint.LONGITUDE || ''') AND ' ||
				'TYPE = ''' || OLD.TYPE || ''' AND ' ||
				'IN_COURSE = ''' || OLD.IN_COURSE || ''' AND ' ||
				'TURN_DIRECTION = ''' || OLD.TURN_DIRECTION || ''' AND ' ||
				'LEG_LENGTH = ''' || OLD.LEG_LENGTH || ''' AND ' ||
				'LEG_TIME = ''' || OLD.LEG_TIME || ''' AND ' ||
				'SPEED = ''' || OLD.SPEED || ''' AND ' ||
				'ZONE_ID = (SELECT ID FROM ZONE WHERE ID_NAME = ''' || curfir.ID_NAME || ''' AND TYPE = ''' || curfir.TYPE || ''' AND NAME = ''' || curfir.NAME || ''')'
			);
		ELSE
			zone_pkg.get_cur_zone(NEW.zone_id, cursorfir);
			FETCH cursorfir INTO curfir;
			CLOSE cursorfir;
			zone_pkg.get_cur_point(NEW.point_id, cursorpoint);
			FETCH cursorpoint INTO newpoint;
			CLOSE cursorpoint;
			--INSERT
			IF TG_OP = 'INSERT' THEN
				INSERT INTO ARINC_CHANGES(STATEMENT)
				VALUES
				('INSERT INTO HOLDING(POINT_ID, TYPE, IN_COURSE, TURN_DIRECTION, LEG_LENGTH, LEG_TIME, SPEED, ZONE_ID) ' ||
				'VALUES(' ||
					'(SELECT ID FROM POINT WHERE TYPE = ''' || newpoint.TYPE || ''' AND NAME = ''' || newpoint.NAME || ''' AND LATITUDE = ''' || newpoint.LATITUDE || ''' AND LONGITUDE = ''' || newpoint.LONGITUDE || '''), ' ||
					'''' || NEW.TYPE || ''', ' ||
					'''' || NEW.IN_COURSE || ''', ' ||
					'''' || NEW.TURN_DIRECTION || ''', ' ||
					'''' || NEW.LEG_LENGTH || ''', ' ||
					'''' || NEW.LEG_TIME || ''', ' ||
					'''' || NEW.SPEED || ''', ' ||
					'(SELECT ID FROM ZONE WHERE ID_NAME = ''' || curfir.ID_NAME || ''' AND TYPE = ''' || curfir.TYPE || ''' AND NAME = ''' || curfir.NAME || ''')' ||
					')');
			--UPDATE
			ELSE
				zone_pkg.get_cur_point(OLD.point_id, cursorpoint);
				FETCH cursorpoint INTO oldpoint;
				CLOSE cursorpoint;
				INSERT INTO ARINC_CHANGES(STATEMENT)
				VALUES
				('UPDATE HOLDING SET ' ||
					'POINT_ID = (SELECT ID FROM POINT WHERE TYPE = ''' || newpoint.TYPE || ''' AND NAME = ''' || newpoint.NAME || ''' AND LATITUDE = ''' || newpoint.LATITUDE || ''' AND LONGITUDE = ''' || newpoint.LONGITUDE || '''), ' ||
					'TYPE = ''' || NEW.TYPE || ''', ' ||
					'IN_COURSE = ''' || NEW.IN_COURSE || ''', ' ||
					'TURN_DIRECTION = ''' || NEW.TURN_DIRECTION || ''', ' ||
					'LEG_LENGTH = ''' || NEW.LEG_LENGTH || ''', ' ||
					'LEG_TIME = ''' || NEW.LEG_TIME || ''', ' ||
					'SPEED = ''' || NEW.SPEED || ''' ' ||
				'WHERE ' ||
					'POINT_ID = (SELECT ID FROM POINT WHERE TYPE = ''' || oldpoint.TYPE || ''' AND NAME = ''' || oldpoint.NAME || ''' AND LATITUDE = ''' || oldpoint.LATITUDE || ''' AND LONGITUDE = ''' || oldpoint.LONGITUDE || ''') AND ' ||
					'TYPE = ''' || OLD.TYPE || ''' AND ' ||
					'IN_COURSE = ''' || OLD.IN_COURSE || ''' AND ' ||
					'TURN_DIRECTION = ''' || OLD.TURN_DIRECTION || ''' AND ' ||
					'LEG_LENGTH = ''' || OLD.LEG_LENGTH || ''' AND ' ||
					'LEG_TIME = ''' || OLD.LEG_TIME || ''' AND ' ||
					'SPEED = ''' || OLD.SPEED || ''' AND ' ||
					'ZONE_ID = (SELECT ID FROM ZONE WHERE ID_NAME = ''' || curfir.ID_NAME || ''' AND TYPE = ''' || curfir.TYPE || ''' AND NAME = ''' || curfir.NAME || ''')'
				);
			END IF;
		END IF;
	END IF;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql';

CREATE TRIGGER holding_ac
	AFTER INSERT OR UPDATE OR DELETE ON holding FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_holding_ac();

