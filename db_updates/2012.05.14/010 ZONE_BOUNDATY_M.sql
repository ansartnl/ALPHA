CREATE TABLE ZONE_BOUNDARY_M 
(
  ID NUMBER(10, 0) NOT NULL 
, TYPE NUMBER(10, 0) NOT NULL 
, SN NUMBER(10, 0) NOT NULL 
, LATITUDE FLOAT(126) DEFAULT 0 
, LONGITUDE FLOAT(126) DEFAULT 0 
, ZONE_ID NUMBER(10, 0) NOT NULL 
, ARC_LATITUDE FLOAT(126) DEFAULT 0 
, ARC_LONGITUDE FLOAT(126) DEFAULT 0 
, ARC_DISTANCE FLOAT(126) DEFAULT 0 
, CONSTRAINT ZONE_BOUNDARY_M_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

ALTER TABLE ZONE_BOUNDARY_M
ADD CONSTRAINT FK_BOUNDARY_POINT_TYPE_M_ID FOREIGN KEY
(
  TYPE 
)
REFERENCES BOUNDARY_POINT_TYPE
(
  ID 
)
ENABLE;

ALTER TABLE ZONE_BOUNDARY_M
ADD CONSTRAINT ZONE_BOUNDARY_ZONE_M_ID FOREIGN KEY
(
  ZONE_ID 
)
REFERENCES ZONE_M
(
  ID 
)
ON DELETE CASCADE ENABLE;

COMMENT ON TABLE ZONE_BOUNDARY_M IS 'Provide boundary for zones.';

COMMENT ON COLUMN ZONE_BOUNDARY_M.ID IS 'Primary key';

COMMENT ON COLUMN ZONE_BOUNDARY_M.TYPE IS 'Type of the line. For textual description see BOUNDARY_POINT_TYPE';

COMMENT ON COLUMN ZONE_BOUNDARY_M.SN IS 'The sequence number of the boundary point.';

COMMENT ON COLUMN ZONE_BOUNDARY_M.LATITUDE IS 'The latitude part of coordiants';

COMMENT ON COLUMN ZONE_BOUNDARY_M.LONGITUDE IS 'The longitude part of coordiants';

COMMENT ON COLUMN ZONE_BOUNDARY_M.ZONE_ID IS 'The reference to zone which point is belonged';

COMMENT ON COLUMN ZONE_BOUNDARY_M.ARC_LATITUDE IS 'The latitute perameter for arcs';

COMMENT ON COLUMN ZONE_BOUNDARY_M.ARC_LONGITUDE IS 'The longitude perameter for arcs';

COMMENT ON COLUMN ZONE_BOUNDARY_M.ARC_DISTANCE IS 'The radius of circle for arcs';
 

  CREATE OR REPLACE TRIGGER "AERO"."ZONE_BOUNDARY_M_AC2" 
  BEFORE INSERT OR UPDATE OR DELETE ON ZONE_BOUNDARY_M FOR EACH ROW
DECLARE
  ac_flag NUMBER;
  rec_exist NUMBER;

BEGIN
  ac_flag := sys_context('CLIENTCONTEXT', 'ARINC_CHANGES_FLAG');
  IF ac_flag = 777 THEN
    --DELETE
    IF DELETING THEN
      null;
    --INSERT or UPDATE
    ELSE
      SELECT COUNT(*) INTO rec_exist FROM ZONE_M WHERE id = :new.zone_id;
      IF rec_exist = 0 THEN
        INSERT INTO ZONE_M (SELECT * FROM ZONE WHERE id = :new.zone_id);
      END IF;
    END IF;
  END IF;
END;
/
ALTER TRIGGER "AERO"."ZONE_BOUNDARY_M_AC2" ENABLE;
