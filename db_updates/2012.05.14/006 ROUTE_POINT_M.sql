
  CREATE TABLE "AERO"."ROUTE_POINT_M" 
   (	"ID" NUMBER(10,0) NOT NULL ENABLE, 
	"SN" NUMBER(10,0) NOT NULL ENABLE, 
	"POINT_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"ROUTE_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"END_FLAG" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE, 
	 CONSTRAINT "ROUTE_POINT_M_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "FK_ROUTEPOINTS_M_POINT_M_ID" FOREIGN KEY ("POINT_ID")
	  REFERENCES "AERO"."POINT_M" ("ID") ON DELETE CASCADE ENABLE, 
	 CONSTRAINT "FK_ROUTEPOINTS_M_ROUTID" FOREIGN KEY ("ROUTE_ID")
	  REFERENCES "AERO"."ROUTE_M" ("ID") ON DELETE CASCADE ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

   COMMENT ON COLUMN "AERO"."ROUTE_POINT_M"."ID" IS 'Primary key';
 
   COMMENT ON COLUMN "AERO"."ROUTE_POINT_M"."SN" IS 'Sequence number';
 
   COMMENT ON COLUMN "AERO"."ROUTE_POINT_M"."POINT_ID" IS 'Reference to POINT.ID';
 
   COMMENT ON COLUMN "AERO"."ROUTE_POINT_M"."ROUTE_ID" IS 'Reference to ROUTE.ID';
 
   COMMENT ON TABLE "AERO"."ROUTE_POINT_M"  IS 'The sequence of poince for current route';
 

  CREATE OR REPLACE TRIGGER "AERO"."ROUTE_POINT_M_AC2" 
  BEFORE INSERT OR UPDATE OR DELETE ON ROUTE_POINT_M FOR EACH ROW
DECLARE
  ac_flag NUMBER;
  rec_exist NUMBER;

BEGIN
  ac_flag := sys_context('CLIENTCONTEXT', 'ARINC_CHANGES_FLAG');
  IF ac_flag = 777 THEN
    --DELETE
    IF DELETING THEN
      null;
    --INSERT or UPDATE
    ELSE
      SELECT COUNT(*) INTO rec_exist FROM ROUTE_M WHERE id = :new.route_id;
      IF rec_exist = 0 THEN
        INSERT INTO ROUTE_M (SELECT * FROM ROUTE WHERE id = :new.route_id);
      END IF;
      SELECT COUNT(*) INTO rec_exist FROM POINT_M WHERE id = :new.point_id;
      IF rec_exist = 0 THEN
        INSERT INTO POINT_M (SELECT * FROM POINT WHERE id = :new.point_id);
      END IF;
    END IF;
  END IF;
END;
/
ALTER TRIGGER "AERO"."ROUTE_POINT_M_AC2" ENABLE;
 

  CREATE OR REPLACE TRIGGER "AERO"."ZONE_POINT_M_AC2" 
  BEFORE INSERT OR UPDATE OR DELETE ON ROUTE_POINT_M FOR EACH ROW
DECLARE
  ac_flag NUMBER;
  rec_exist NUMBER;
  z_id NUMBER;

BEGIN
  ac_flag := sys_context('CLIENTCONTEXT', 'ARINC_CHANGES_FLAG');
  IF ac_flag = 777 THEN
    --DELETE
    IF DELETING THEN
      null;
    --INSERT or UPDATE
    ELSE
      SELECT zone_id INTO z_id FROM ROUTE_M WHERE id = :new.route_id;
      SELECT COUNT(*) INTO rec_exist FROM ZONE_POINT_M
      WHERE point_id = :new.point_id AND zone_id = z_id;
      IF rec_exist = 0 THEN
        INSERT INTO ZONE_POINT_M (zone_id, point_id) VALUES (z_id, :new.point_id);
      END IF;
    END IF;
  END IF;
END;
/
ALTER TRIGGER "AERO"."ZONE_POINT_M_AC2" ENABLE;
 
