CREATE TABLE ZONE_AIRPORT_M 
(
  ID NUMBER(10, 0) NOT NULL 
, ZONE_ID NUMBER(10, 0) NOT NULL 
, AIRPORT_ID NUMBER(10, 0) NOT NULL 
, CONSTRAINT ZONE_AIRPORT_M_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

ALTER TABLE ZONE_AIRPORT_M
ADD CONSTRAINT FK_ZONEAIRPORTS_AIRPORT_M_ID FOREIGN KEY
(
  AIRPORT_ID 
)
REFERENCES AIRPORT_M
(
  ID 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE ZONE_AIRPORT_M
ADD CONSTRAINT FK_ZONEAIRPORTS_ZONE_M_ID FOREIGN KEY
(
  ZONE_ID 
)
REFERENCES ZONE_M
(
  ID 
)
ON DELETE CASCADE ENABLE;

COMMENT ON TABLE ZONE_AIRPORT_M IS 'Provide many-to-many link belonging AIRPORT to ZONE. Do not foregot recalculate this table after changing AIRPORT or ZONE table.';

COMMENT ON COLUMN ZONE_AIRPORT_M.ID IS 'Primary key';

COMMENT ON COLUMN ZONE_AIRPORT_M.ZONE_ID IS 'Foreign key to ZONE.ID';

COMMENT ON COLUMN ZONE_AIRPORT_M.AIRPORT_ID IS 'Foreign key to AIRPORT.ID';


  CREATE OR REPLACE TRIGGER "AERO"."ZONE_AIRPORT_M_AC2" 
  BEFORE INSERT OR UPDATE OR DELETE ON ZONE_AIRPORT_M FOR EACH ROW
DECLARE
  ac_flag NUMBER;
  rec_exist NUMBER;

BEGIN
  ac_flag := sys_context('CLIENTCONTEXT', 'ARINC_CHANGES_FLAG');
  IF ac_flag = 777 THEN
    --DELETE
    IF DELETING THEN
      null;
    --INSERT or UPDATE
    ELSE
      SELECT COUNT(*) INTO rec_exist FROM ZONE_M WHERE id = :new.zone_id;
      IF rec_exist = 0 THEN
        INSERT INTO ZONE_M (SELECT * FROM ZONE WHERE id = :new.zone_id);
      END IF;
    END IF;
  END IF;
END;
/
ALTER TRIGGER "AERO"."ZONE_AIRPORT_M_AC2" ENABLE;
