
  CREATE TABLE "AERO"."ROUTE_M" 
   (	"ID" NUMBER(10,0) NOT NULL ENABLE, 
	"NAME" VARCHAR2(20 CHAR) NOT NULL ENABLE, 
	"ZONE_ID" NUMBER(10,0) NOT NULL ENABLE, 
	 CONSTRAINT "ROUTE_M_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "FK_ROUTES_M_ZONEID" FOREIGN KEY ("ZONE_ID")
	  REFERENCES "AERO"."ZONE_M" ("ID") ON DELETE CASCADE ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

   COMMENT ON COLUMN "AERO"."ROUTE_M"."ID" IS 'Primary key';
 
   COMMENT ON COLUMN "AERO"."ROUTE_M"."NAME" IS 'Zone name';
 
   COMMENT ON COLUMN "AERO"."ROUTE_M"."ZONE_ID" IS 'Pointer to the FIR id which route is belonged';
 
   COMMENT ON TABLE "AERO"."ROUTE_M"  IS 'Reprisent routed - the set of POINTs';
 

  CREATE OR REPLACE TRIGGER "AERO"."ROUTE_M_AC2" 
  BEFORE INSERT OR UPDATE OR DELETE ON ROUTE_M FOR EACH ROW
DECLARE
  ac_flag NUMBER;
  rec_exist NUMBER;

BEGIN
  ac_flag := sys_context('CLIENTCONTEXT', 'ARINC_CHANGES_FLAG');
  IF ac_flag = 777 THEN
    --DELETE
    IF DELETING THEN
      null;
    --INSERT or UPDATE
    ELSE
      SELECT COUNT(*) INTO rec_exist FROM ZONE_M WHERE id = :new.zone_id;
      IF rec_exist = 0 THEN
        INSERT INTO ZONE_M (SELECT * FROM ZONE WHERE id = :new.zone_id);
      END IF;
    END IF;
  END IF;
END;
/
ALTER TRIGGER "AERO"."ROUTE_M_AC2" ENABLE;
 
