
  CREATE TABLE "AERO"."ZONE_M" 
   (	"ID" NUMBER(10,0) NOT NULL ENABLE, 
	"NAME" VARCHAR2(45 CHAR), 
	"TYPE" NUMBER(10,0) NOT NULL ENABLE, 
	"ID_NAME" VARCHAR2(10 CHAR) NOT NULL ENABLE, 
	"PARENT_ID" NUMBER(10,0) DEFAULT NULL, 
	"LOW_LIMIT" NUMBER(10,0) DEFAULT 0 NOT NULL ENABLE, 
	"UP_LIMIT" NUMBER(10,0) DEFAULT 0 NOT NULL ENABLE, 
	"SHORT_NAME" VARCHAR2(100 BYTE), 
	"LABEL_NAME" VARCHAR2(100 BYTE), 
	"FREQUENCY" FLOAT(126), 
	 CONSTRAINT "ZONE_M_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "ZONE_M_UK_ID_NAME" UNIQUE ("ID_NAME", "NAME", "TYPE", "LOW_LIMIT", "UP_LIMIT", "PARENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "ZONE_M_ZONE_TYPE_M_FK1" FOREIGN KEY ("TYPE")
	  REFERENCES "AERO"."ZONE_TYPE_M" ("ID") ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

   COMMENT ON COLUMN "AERO"."ZONE_M"."ID" IS 'Primary key';
 
   COMMENT ON COLUMN "AERO"."ZONE_M"."NAME" IS 'The full name of zone.';
 
   COMMENT ON COLUMN "AERO"."ZONE_M"."TYPE" IS 'Type of zone (FIR/SECTOR/etc). There is descriprion in the ZONE_TYPE table.';
 
   COMMENT ON COLUMN "AERO"."ZONE_M"."ID_NAME" IS 'The unique textual id of zone. As usual contains 4 capital letters';
 
   COMMENT ON COLUMN "AERO"."ZONE_M"."PARENT_ID" IS 'Pointer to the zone which include current zone. This is actual for FIR-Sector including. If zone is not included the value is null.';
 
   COMMENT ON COLUMN "AERO"."ZONE_M"."LOW_LIMIT" IS 'Lowest limit for sectors';
 
   COMMENT ON COLUMN "AERO"."ZONE_M"."UP_LIMIT" IS 'Higest limit for sectors';
 
   COMMENT ON TABLE "AERO"."ZONE_M"  IS '???????? ?????? ? ????? ? ????????.
Contains FIRs and sectors. I hope we will separate sectors and firs... one day...';
 

  CREATE INDEX "AERO"."ZONE_M_INDEX1" ON "AERO"."ZONE_M" ("NAME", "ID_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 
  CREATE UNIQUE INDEX "AERO"."ZONE_M_PK" ON "AERO"."ZONE_M" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 
  CREATE UNIQUE INDEX "AERO"."ZONE_M_UK_ID_NAME" ON "AERO"."ZONE_M" ("ID_NAME", "NAME", "TYPE", "LOW_LIMIT", "UP_LIMIT", "PARENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

  CREATE OR REPLACE TRIGGER "AERO"."ZONE_M_AC2" 
  BEFORE INSERT OR UPDATE OR DELETE ON ZONE_M FOR EACH ROW
DECLARE
  ac_flag NUMBER;
  rec_exist NUMBER;

BEGIN
  ac_flag := sys_context('CLIENTCONTEXT', 'ARINC_CHANGES_FLAG');
  IF ac_flag = 777 THEN
    --DELETE
    IF DELETING THEN
      null;
    --INSERT or UPDATE
    ELSE
      SELECT COUNT(*) INTO rec_exist FROM ZONE_TYPE_M WHERE id = :new.type;
      IF rec_exist = 0 THEN
        INSERT INTO ZONE_TYPE_M (SELECT * FROM ZONE_TYPE WHERE id = :new.type);
      END IF;
    END IF;
  END IF;
END;
/
ALTER TRIGGER "AERO"."ZONE_M_AC2" ENABLE;
 
