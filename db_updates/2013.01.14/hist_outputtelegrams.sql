
  CREATE TABLE "HIST_OUTPUTTELEGRAMS" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"CREATED" TIMESTAMP (6) NOT NULL ENABLE, 
	"TEXT" VARCHAR2(4000 CHAR) NOT NULL ENABLE, 
	"HEADER" VARCHAR2(4000 CHAR), 
	"MESSAGE" VARCHAR2(4000 CHAR), 
	"ADDRESSES" VARCHAR2(4000 CHAR), 
	"HIST_ID" NUMBER NOT NULL ENABLE, 
	"MODIFIED_BY" NUMBER NOT NULL ENABLE, 
	"MODIFIED_AT" TIMESTAMP (6) DEFAULT SYS_EXTRACT_UTC(SYSTIMESTAMP) NOT NULL ENABLE, 
	"MODIFICATION_TYPE" CHAR(1 CHAR), 
	 CONSTRAINT "HIST_OUTPUTTELEGRAMS_PK" PRIMARY KEY ("HIST_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 
   COMMENT ON COLUMN "HIST_OUTPUTTELEGRAMS"."ID" IS 'identifier';
 
   COMMENT ON COLUMN "HIST_OUTPUTTELEGRAMS"."CREATED" IS 'UTC timestamp of inserting message';
 
   COMMENT ON COLUMN "HIST_OUTPUTTELEGRAMS"."TEXT" IS 'AFTN message text';
 
   COMMENT ON COLUMN "HIST_OUTPUTTELEGRAMS"."HEADER" IS 'AFTN message header';
 
   COMMENT ON COLUMN "HIST_OUTPUTTELEGRAMS"."MESSAGE" IS 'AFTN message';
 
   COMMENT ON COLUMN "HIST_OUTPUTTELEGRAMS"."ADDRESSES" IS 'AFTN addresses';
 
   COMMENT ON COLUMN "HIST_OUTPUTTELEGRAMS"."HIST_ID" IS 'History record id';
   
   COMMENT ON COLUMN "HIST_OUTPUTTELEGRAMS"."MODIFIED_BY" IS 'Who modified';
 
   COMMENT ON COLUMN "HIST_OUTPUTTELEGRAMS"."MODIFIED_AT" IS 'When modified';
 
   COMMENT ON COLUMN "HIST_OUTPUTTELEGRAMS"."MODIFICATION_TYPE" IS 'Modified type (i - inserted; u - updated; d - deleted)';
 
   COMMENT ON TABLE "HIST_OUTPUTTELEGRAMS"  IS 'History of changes OUTPUTTELEGRAMS table';
 

  CREATE SEQUENCE  "HIST_OUTPUTTELEGRAMS_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
 

  CREATE OR REPLACE TRIGGER "HIST_OUTPUTTELEGRAMS_TRG" BEFORE INSERT ON HIST_OUTPUTTELEGRAMS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.HIST_ID IS NULL THEN
      SELECT HIST_OUTPUTTELEGRAMS_SEQ.NEXTVAL INTO :NEW.HIST_ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HIST_OUTPUTTELEGRAMS_TRG" ENABLE;
 

  CREATE OR REPLACE TRIGGER "OUTPUTTELEGRAMS_AFTER_QUERY_TR" 
AFTER INSERT OR UPDATE OR DELETE ON "OUTPUTTELEGRAMS"
FOR EACH ROW
DECLARE
	modification_type	CHAR;
	current_user_id		NUMBER;
BEGIN
  BEGIN
    SELECT user_id INTO current_user_id FROM login WHERE ROWNUM <= 1;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      current_user_id := -1;
  END;
  
  IF current_user_id <> -1 THEN
    IF DELETING THEN
    INSERT INTO hist_outputtelegrams
      (id, created, header, text, addresses, modified_by, modification_type)
    VALUES
      (:OLD.id, :OLD.created, :OLD.header, :OLD.text, :OLD.addresses, current_user_id, 'D');
    ELSE
      IF INSERTING THEN
        modification_type := 'I';
      ELSE
        modification_type := 'U';
      END IF;
      INSERT INTO hist_outputtelegrams
        (id, created, header, text, addresses, modified_by, modification_type)
      VALUES
        (:NEW.id, :NEW.created, :NEW.header, :NEW.text, :NEW.addresses, current_user_id, modification_type);
    END IF;
  END IF;
END;
/
ALTER TRIGGER "OUTPUTTELEGRAMS_AFTER_QUERY_TR" ENABLE;
 
