
  CREATE TABLE "AFTN_ABONENT" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"NAME" VARCHAR2(200 CHAR) NOT NULL ENABLE, 
	"ADDRESS" VARCHAR2(8 CHAR) NOT NULL ENABLE, 
	 CONSTRAINT "AFTN_ABONENT_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 
   CREATE SEQUENCE  "AFTN_ABONENT_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
 
  CREATE OR REPLACE TRIGGER "AFTN_ABONENT_TRG" BEFORE INSERT ON AFTN_ABONENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT AFTN_ABONENT_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "AFTN_ABONENT_TRG" ENABLE;
 

 
  CREATE TABLE "AFTN_GROUP" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"NAME" VARCHAR2(200 CHAR) NOT NULL ENABLE, 
	 CONSTRAINT "AFTN_GROUP_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 
   CREATE SEQUENCE  "AFTN_GROUP_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
 
  CREATE OR REPLACE TRIGGER "AFTN_GROUP_TRG" BEFORE INSERT ON AFTN_GROUP 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT AFTN_GROUP_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "AFTN_GROUP_TRG" ENABLE;
 


  CREATE TABLE "AFTN_ABONENT_GROUP" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"GROUP_ID" NUMBER NOT NULL ENABLE, 
	"ABONENT_ID" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "AFTN_ABONENT_GROUP_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "AFTN_ABONENT_GROUP_AFTN_A_FK1" FOREIGN KEY ("ABONENT_ID")
	  REFERENCES "AFTN_ABONENT" ("ID") ON DELETE CASCADE ENABLE, 
	 CONSTRAINT "AFTN_ABONENT_GROUP_AFTN_G_FK1" FOREIGN KEY ("GROUP_ID")
	  REFERENCES "AFTN_GROUP" ("ID") ON DELETE CASCADE ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 
   CREATE SEQUENCE  "AFTN_ABONENT_GROUP_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
 
  CREATE OR REPLACE TRIGGER "AFTN_ABONENT_GROUP_TRG" BEFORE INSERT ON AFTN_ABONENT_GROUP 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT AFTN_ABONENT_GROUP_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "AFTN_ABONENT_GROUP_TRG" ENABLE;
 
