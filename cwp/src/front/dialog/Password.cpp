#include "Password.h"

#include "TVAError.h"
#include "main.h"
#include "MouseLocker.h"

#include <QMessageBox>
#include <QPushButton>
#include <QtGui/QCloseEvent>

Password::Password(bool cancel, bool lockMouse, QWidget* parent) :
    QDialog(parent), mCancel(cancel), mLockMouse(lockMouse)
{
    setupUi(this);
    setFixedSize(size());
    buttonBox->button(QDialogButtonBox::Cancel)->setEnabled(mCancel);
    UserEdit->setFocus();

    if (mLockMouse)
        mouseLocker()->lockInside(this);
}

QSharedPointer<CUser> Password::user() const
{
    return mUser;
}

bool Password::loadUser(const QString &user, const QString &pswd)
{
    TVA_CATCHALL_TRY
    {
        mUser = dao()->LoadUser(user);
        TVA_CHECK(
                        mUser->CheckPassword(pswd),
                        tr("Wrong user name or/and password"),
                        E_FAIL);
    }
    TVA_CATCHALL(err)
    {
        QMessageBox mb(QMessageBox::Critical, tr("Error"), err.reason(), QMessageBox::Ok, this);
        if (mLockMouse)
            mouseLocker()->lockInside(&mb);
        mb.exec();
        if (mLockMouse)
            mouseLocker()->lockInside(this);
        return false;
    }
    return true;
}

void Password::accept()
{
    if ( loadUser(UserEdit->text(), PassEdit->text()) )
        QDialog::accept();
}

void Password::closeEvent(QCloseEvent* pEvent)
{
    if (mCancel)
        pEvent->accept();
    else
        pEvent->ignore();

}

void Password::changeEvent(QEvent* event)
{
    //LanguageChange events should not be confused with LocaleChange events.
    if (event->type() == QEvent::LocaleChange)
    {
        // HERE we can un|install qtranslator
        //    Locale-Change events are generated by the system and tell the application,
        //    "Maybe you should load a new translation."
    }
    else if (event->type() == QEvent::LanguageChange)
    {
        //    LanguageChange events are generated by Qt and tell the application's widgets,
        //    "Maybe you should retranslate all your strings."
        retranslateUi(this);
    }

    QDialog::changeEvent(event);
}
