/****************************************************************************
 **
 ** Copyright (C) Qxt Foundation. Some rights reserved.
 **
 ** This file is part of the documentation of the Qxt library.
 **
 ** This library is free software; you can redistribute it and/or modify it
 ** under the terms of the Common Public License, version 1.0, as published
 ** by IBM, and/or under the terms of the GNU Lesser General Public License,
 ** version 2.1, as published by the Free Software Foundation.
 **
 ** This file is provided "AS IS", without WARRANTIES OR CONDITIONS OF ANY
 ** KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY
 ** WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR
 ** FITNESS FOR A PARTICULAR PURPOSE.
 **
 ** You should have received a copy of the CPL and the LGPL along with this
 ** file. See the LICENSE file and the cpl1.0.txt/lgpl-2.1.txt files
 ** included with the source distribution for more information.
 ** If you did not receive a copy of the licenses, contact the Qxt Foundation.
 **
 ** <http://libqxt.org>  <foundation@libqxt.org>
 **
 ****************************************************************************/

/*!
    \module QxtCore
    \title QxtCore Module
    \keyword QxtCore
    \ingroup modules

    \brief The QxtCore module extends QtCore and contains core non-GUI functionality.

    All other Qt modules rely on this module. To include the
    definitions of the module's classes, use the following directive:

    \code
    #include <QxtCore>
    \endcode
*/

/*!
    \module QxtGui
    \title QxtGui Module
    \keyword QxtGui
    \ingroup modules

    \brief The QxtGui module extends QxtCore and QtGui.

    To include the definitions of both Qxt modules' classes, use the
    following directive:

    \code
    QXT = core gui
    \endcode
*/

/*!
    \module QxtBerkeley
    \title QxtBerkeley Module
    \keyword QxtBerkeley
    \ingroup modules

    \brief The QxtBerkeley module provides a Qt interface to the Berkeley DB.

    berkeley db is in wide use where relational databases, especially SQL, are not desired due to heavy overhead or its programming complexity. QxtBerkeley provides you an extremly easy to use interface to the fast and stable file based berkeley database. The API is designed after Qts tulip container classes.

    <h2>Platform specific notes</h2>
    <h3>Windows</h3>
    On Windows the buildsystem is unfortunately unable to detect the berkeley db library on your system automatically, because of the wide differences in naming scheme.
    <br>
    You will have to add the library yourself:
    <br>
    MSVC:
    \code
    configure.bat -I C:\BDB-MSVC\include -L C:\BDB-MSVC\lib -l libdb46 (or libdb45)
    \endcode

    MinGW (http://mathieu.carbou.free.fr/wiki/index.php?title=Berkeley_DB_for_MinGW)
    \code
    configure.bat -I C:\BDB-MINGW\include -L C:\BDB-MINGW\lib -l db
    \endcode
    <h3>Linux</h3>
    If you have issues compiling QxtBerkeley with your distributions bdb package, it is suggested that you try the upstream version from http://www.oracle.com/technology/software/products/berkeley-db/index.html
*/

/*!
    \module QxtNetwork
    \title QxtNetwork Module
    \keyword QxtNetwork
    \ingroup modules

    \brief The QxtNetwork module extends QtNetwork
*/

/*!
    \module QxtSql
    \title QxtSql Module
    \keyword QxtSql
    \ingroup modules

    \brief The QxtSql module extends QtSql with serializable queries.
*/

/*!
    \module QxtWeb
    \title QxtWeb Module
    \keyword QxtWeb
    \ingroup modules

    \brief The QxtWeb module provides tools for creating web services using Qt.

    QxtWeb provides tools for creating event-driven web services using Qt.

    The general usage pattern is as follows:

    \list
    \o Create a QxtAbstractWebSessionManager object, such as QxtHttpSessionManager, for each protocol that can interface to the service.
    \o If using QxtHttpSessionManager, select a connector plugin, such as QxtHttpServerConnector.
    \o Register a QxtAbstractWebService factory. The factory is invoked each time a new session is created and returns a service object
        for that session. QxtWebServiceDirectory allows you to register multiple services and selects between them based on the path.
    \o Invoke QxtAbstractWebSessionManager::start() to begin accepting connections.
    \endlist

    When a new visitor connects who does not belong to a session, a new service instance is created. When a request is received, a
    QxtAbstractWebService::pageRequestedEvent() is dispatched to the service. When the service is ready to respond to the request, it posts
    a QxtWebPageEvent to the session manager. This is done asynchronously; there is no requirement that the pageRequestedEvent handler
    must respond to the request before the function ends, but such a response must eventually be posted or the web browser will eventually
    time out.
*/

/*!
    \module QxtZeroconf
    \title QxtZeroconf Module
    \keyword QxtZeroconf
    \ingroup modules

    \brief The QxtZeroconf module implements configure free service discovery
*/
